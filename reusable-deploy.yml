# .github/workflows/2-reusable-deploy.yml
# Este es nuestro "Workflow Reutilizable". No se puede disparar directamente.
# Solo se ejecuta cuando otro workflow (como 1-main-pipeline.yml) lo llama.

name: Workflow de Despliegue Reutilizable

# --- TRIGGER REUTILIZABLE ---
# 'on: workflow_call' define este archivo como una plantilla reutilizable.
on:
  workflow_call:
    # Define los par√°metros de entrada (inputs) que este workflow espera recibir.
    inputs:
      environment:
        description: 'El entorno al que se va a desplegar (development, staging, production)'
        required: true
        type: string

jobs:
  # --- JOB DE PRUEBAS ---
  test:
    name: üß™ Pruebas
    runs-on: ubuntu-latest
    steps:
      - name: Imprimir mensaje de prueba
        run: |
          echo "Hola Mundo desde el job de 'test' para el entorno: ${{ inputs.environment }}"
          echo "Aqu√≠ ir√≠an los comandos como 'npm test' o similar."

  # --- JOB DE CONSTRUCCI√ìN ---
  build:
    name: üèóÔ∏è Construcci√≥n
    runs-on: ubuntu-latest
    # Este job necesita que el job 'test' haya terminado exitosamente.
    needs: test
    steps:
      - name: Imprimir mensaje de construcci√≥n
        run: |
          echo "Hola Mundo desde el job de 'build' para el entorno: ${{ inputs.environment }}"
          echo "Aqu√≠ ir√≠an los comandos como 'npm run build' o 'docker build'."

  # --- JOB DE DESPLIEGUE ---
  deploy:
    name: üöÄ Despliegue
    runs-on: ubuntu-latest
    # Este job necesita que el job 'build' haya terminado exitosamente.
    needs: build

    # Asigna este job a un "Entorno" de GitHub. Esto te da protecci√≥n
    # y visibilidad en la secci√≥n de "Environments" de tu repositorio.
    environment:
      name: ${{ inputs.environment }}

    steps:
      - name: Imprimir mensaje de despliegue
        run: |
          echo "Hola Mundo desde el job de 'deploy' para el entorno: ${{ inputs.environment }}"
          echo "Aqu√≠ ir√≠an los comandos de despliegue a GCP, AWS, etc."
